import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import datetime

# Sidebar filters
st.sidebar.header("ุงูููุงุชุฑ")
# from_date = st.sidebar.date_input("From", datetime.date(2025, 2, 1))
# to_date = st.sidebar.date_input("To", datetime.date(2025, 2, 28))  # Adjusted to a later date
promo = st.sidebar.radio('ุงุฎุชุฑ ุงููุชุฑุฉ' , ['ูุงูู ุงูุดูุฑ', 'ูุจู ุงูุฎุตููุงุช', 'ูุชุฑุฉ ุงูุฎุตููุงุช'])

if promo == 'ูุงูู ุงูุดูุฑ':
    # data = pd.read_csv("clothes_shop_data.csv", parse_dates=['Date'])
    from_date = '2025-2-1'
    to_date = '2025-2-28'
    deltas = ''
    deltap = ''
    deltam = ''

elif promo == 'ูุจู ุงูุฎุตููุงุช':
    # data = pd.read_csv("clothes_shop_data_290.csv", parse_dates=['Date'])
    from_date = '2025-2-11'
    to_date = '2025-2-19'
    deltas = ''
    deltap = ''
    deltam = ''

elif promo == 'ูุชุฑุฉ ุงูุฎุตููุงุช':
    # data = pd.read_csv("clothes_shop_data_290.csv", parse_dates=['Date'])
    from_date = '2025-2-20'
    to_date = '2025-2-28'
    deltas = ''
    deltap = ''
    deltam = ''

st.sidebar.subheader("ูู: ")
st.sidebar.text(from_date)
st.sidebar.subheader("ุงูู: ")
st.sidebar.text(to_date)

category_filter = st.sidebar.multiselect("ุงูููุชุฌุงุช", ['ูููุต', 'ุจูุทููู', 'ุฌุงููุช'], default=['ูููุต', 'ุจูุทููู', 'ุฌุงููุช'])
# Ensure from_date is not after to_date
# if from_date > to_date:
#     st.error("Error: 'From' date must be before 'To' date.")

# Load and process data
data = pd.read_csv("clothes_shop_data.csv", parse_dates=['Date'])
data['Product'] = data['Product'].map({'Shirt': 'ูููุต', 'Jeans': 'ุจูุทููู', 'Jacket': 'ุฌุงููุช'})
data.loc[(data['Date'] >= '2025-2-20') & (data['Product'] == 'ุฌุงููุช'), 'Quantity'] = data['Quantity'] * 4
data.loc[(data['Date'] >= '2025-2-20') & (data['Product'] == 'ุฌุงููุช'), 'Price'] = data['Price'] * 0.3
data['ุงููุจูุนุงุช'] = data['Price'] * data['Quantity']
data['cost'] = data['COGS'] * data['Quantity']
data['ุงูุฃุฑุจุงุญ'] = data['ุงููุจูุนุงุช'] - data['cost']
data['ุงููุงูุด'] = data['ุงูุฃุฑุจุงุญ'] / data['ุงููุจูุนุงุช']
data['ูุงูุด ุงูููุชุฌ'] = data['ุงููุงูุด'].apply(lambda x: str(round(x*100, 2)) + ' %')

# Apply filters
filtered_df = data[(data['Product'].isin(category_filter)) &
                   (data['Date'] >= pd.to_datetime(from_date)) & 
                   (data['Date'] <= pd.to_datetime(to_date))]

# st.markdown("# Cafe Dashboard")
st.html("""
<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <style>
        .content {
            direction: rtl;
            text-align: right;
            ุงููุงูุด: 20px;
        }

        .content ul {
            padding-right: 0;
            ุงููุงูุด-right: 0;
            list-style-position: inside;
        }

        h1 {
            font-size: 36px; /* Increased font size */
            font-weight: bold;
        }

        .content li {
            ุงููุงูุด-bottom: 10px;
        }

        .highlight {
            color: yellow;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="content">
        <h1>ููุญุฉ ุจูุงูุงุช ุชุญููู ุงูููุงูุด: ููู ุชูุดู ุงููุดุงูู ูุชุญุณู ุงูุฃุฏุงุกุ</h1>
        <p>ูุฏููุง ูุซุงู ุนููู ุนูู ููููุฉ ุงุณุชุฎุฏุงู ููุญุฉ ุงูุจูุงูุงุช ูููู ุฃุฏุงุก ุงูููุงูุด ูุงุชุฎุงุฐ ูุฑุงุฑุงุช ูุงููุฉ ุฃูุซุฑ ุฐูุงุกู. ูู ุฎูุงู ุชุญููู ุงูููุงูุดุ ูููููุง ุงูุชุนุฑู ุนูู ุงููุดููุงุช ุงูุชู ุชุคุซุฑ ุนูู ุงูุฑุจุญูุฉ ูุงุชุฎุงุฐ ุฅุฌุฑุงุกุงุช ุชุตุญูุญูุฉ ูู ุงูููุช ุงูููุงุณุจ.</p>
        
        <h2>ูุชุฌุฑ ุจูุน ููุงุจุณ</h2>
        <p>ูุงู ุงููุชุฌุฑ ุจุชูุฏูู ุฎุตููุงุช ุนูู ุจุนุถ ุงูููุชุฌุงุช ูู ุงููุชุฑุฉ ูู 20 ูุจุฑุงูุฑ ุฅูู 28 ูุจุฑุงูุฑ. ูุฑูุฏ ุฃู ูุฑู ููู ุฃุซุฑุช ูุฐู ุงูุฎุตููุงุช ุนูู ุงูููุงูุด ุงูุฅุฌูุงููุฉ ูุฃุฏุงุก ุงููุชุฌุฑ.</p>

        <h2>ุชุญููู ุงููุชุฑุงุช ุงููุฎุชููุฉ ุจุงุณุชุฎุฏุงู ููุญุฉ ุงูุจูุงูุงุช</h2>
        <p class="highlight">ุงุณุชุฎุฏู ุงูููุงุชุฑ ูู ุงูุดุฑูุท ุงูุฌุงูุจู</p>

        <h3>๐น ุดูุฑ ูุจุฑุงูุฑ (ูุงูู ุงูุดูุฑ)</h3>
        <ul>
            <li>ุฅุฐุง ูุธุฑูุง ุฅูู ุงูุฑุณู ุงูุจูุงูู ุงูุฐู ูุธูุฑ ุงููุจูุนุงุช ูุงูุฃุฑุจุงุญุ ููุงุญุธ ุฃูู ูุจู ูุชุฑุฉ ุงูุชุฎููุถุงุช ูุงูุช ุงููุจูุนุงุช ุซุงุจุชุฉ.</li>
            <li>ุฎูุงู ูุชุฑุฉ ุงูุชุฎููุถุงุช ูุงู ููุงู ุงุฑุชูุงุน ุจุณูุท ูู ุงููุจูุนุงุชุ ููู ููุณ ุงูููุช ููุงู ุงูุฎูุงุถ ูู ุงูุฃุฑุจุงุญ.</li>
            <li>ููุงุญุธ ุฃูุถูุง ุงูุฎูุงุถูุง ุญุงุฏูุง ูู ุฑุณู ุงูููุงูุด ูู ุจุฏุงูุฉ ูุชุฑุฉ ุงูุชุฎููุถุงุช.</li>
        </ul>

        <h3>๐น ุงูุฃุฏุงุก ุงูุทุจูุนู (ูุจู ุงูุฎุตููุงุช)</h3>
        <ul>
            <li>ูุชูุณุท ูุงูุด ุงูุฑุจุญ ูุงู 51.55% ููุงู ุงูุฃุฏุงุก ุงููุงูู ูุณุชูุฑูุง.</li>
        </ul>

        <h3>๐น ุฃุฏุงุก ุงูุฎุตููุงุช (ูุชุฑุฉ ุงูุฎุตููุงุช)</h3>
        <ul>
            <li>ุงูุฎูุถ ุงููุงูุด ุจุดูู ุญุงุฏ ุฅูู 13.55%.</li>
            <li>ุงูุฎูุงุถ ุงูููุงูุด ุทุจูุนู ุนูุฏ ุชูุฏูู ุงูุฎุตููุงุชุ ูููู ูุงุญุธูุง ุฃู ุงูุงูุฎูุงุถ ุญุงุฏ ุฌุฏูุง ูุฃูุถูุง ููุงูู ุงูุฎูุงุถ ูู ุฅุฌูุงูู ุงูุฃุฑุจุงุญุ ููุง ูุณุชุฏุนู ุงุณุชูุตุงุก ุงูุณุจุจ.</li>
        </ul>

        <h3>๐น ุณุจุจ ุงูุงูุฎูุงุถ (ูุชุฑุฉ ุงูุฎุตููุงุช)</h3>
        <ul>
            <li>ุจุงููุธุฑ ุฅูู ุฌุฏุงูู ุงูุฃุณุนุงุฑ ูุงูููุงูุดุ ูุฑู ุฃูู ุชู ุชุฎููุถ ุณุนุฑ ุงูุฌุงููุช ุจูุณุจุฉ 70% ููุง ุฃุฏู ุฅูู ุงูุฎูุงุถ ูู ุงูููุงูุด.</li>
            <li>ุงุณุชุฎุฏู ููุชุฑ ุงูููุชุฌ  ููุงุทูุงุน ุฃูุซุฑ ุนูู ุฃุฏุงุก ูู ููุชุฌ ุนูู ุญุฏู.</li>
        </ul>
    </div>
</body>
</html>

""")
st.header('')

a, b, c = st.columns(3)
a.metric("ุงููุจูุนุงุช", filtered_df['ุงููุจูุนุงุช'].sum(), deltas, border=True)
b.metric("ุงูุฃุฑุจุงุญ", filtered_df['ุงูุฃุฑุจุงุญ'].sum(), deltap, border=True)
c.metric("ุงููุงูุด", str(round(filtered_df['ุงูุฃุฑุจุงุญ'].sum() / filtered_df['ุงููุจูุนุงุช'].sum() * 100, 2)) + " %", deltam, border=True)

# col1, col2, col3 = st.columns(3)

# with col1:
#     st.subheader(filtered_df['ุงููุจูุนุงุช'].sum())
#     st.header("ุงููุจูุนุงุช")

# with col2:
#     st.subheader(filtered_df['ุงูุฃุฑุจุงุญ'].sum())
#     st.header("ุงูุฃุฑุจุงุญ")

# with col3:
#     st.subheader(str(round(filtered_df['ุงูุฃุฑุจุงุญ'].sum() / filtered_df['ุงููุจูุนุงุช'].sum() * 100, 2)) + " %")
#     st.header("ุงููุงูุด")

# st.header('')


# Summary Statistics (Replaced Value1 and Value2 with meaningful columns)
# st.markdown("### Summary Statistics")
# st.write(f"**Number of data points:** {len(filtered_df)}")
# st.write(f"**Mean ุงููุจูุนุงุช:** {filtered_df['ุงููุจูุนุงุช'].mean():.2f}")
# st.write(f"**Mean ุงูุฃุฑุจุงุญ:** {filtered_df['ุงูุฃุฑุจุงุญ'].mean():.2f}")

# Place two plots side by side using columns
# col1, col2 = st.columns(2)

# with col1:
#     st.markdown("#### ุงููุจูุนุงุช")
#     ุงููุจูุนุงุช_data = filtered_df.groupby('Date')['ุงููุจูุนุงุช'].sum().reset_index()
#     st.line_chart(ุงููุจูุนุงุช_data.set_index('Date'))

# with col2:
#     st.markdown("#### ุงูุฃุฑุจุงุญ")
#     ุงูุฃุฑุจุงุญ_data = filtered_df.groupby('Date')['ุงูุฃุฑุจุงุญ'].sum().reset_index()
#     st.line_chart(ุงูุฃุฑุจุงุญ_data.set_index('Date'))

# st.header('')

# st.markdown("#### ุงููุจูุนุงุช per Product")
# ุงููุจูุนุงุช_line = filtered_df.groupby(['Date', 'Product'])['ุงููุจูุนุงุช'].sum().reset_index()
# st.line_chart(ุงููุจูุนุงุช_line, x='Date', y='ุงููุจูุนุงุช', color='Product')

# st.header('')

# st.markdown("#### ุงูุฃุฑุจุงุญ per Product")
# ุงูุฃุฑุจุงุญ_line = filtered_df.groupby(['Date', 'Product'])['ุงูุฃุฑุจุงุญ'].sum().reset_index()
# st.line_chart(ุงูุฃุฑุจุงุญ_line, x='Date', y='ุงูุฃุฑุจุงุญ', color='Product')

# st.header('')

st.markdown("#### ุงููุจูุนุงุช ู ุงูุฃุฑุจุงุญ")
ุงููุงูุด_line = filtered_df.groupby('Date')[['ุงููุจูุนุงุช', 'ุงูุฃุฑุจุงุญ']].sum().reset_index()
ุงููุงูุด_line = ุงููุงูุด_line.melt(id_vars=['Date'], value_vars=['ุงููุจูุนุงุช', 'ุงูุฃุฑุจุงุญ'])
st.line_chart(ุงููุงูุด_line.rename(columns={'Date': 'ุงูุชุงุฑูุฎ'}), x='ุงูุชุงุฑูุฎ', y='value', color="variable")

# st.header('')

st.markdown("#### ุงููุงูุด")
ุงููุงูุด_line = filtered_df.groupby('Date')[['ุงููุจูุนุงุช', 'cost']].mean().reset_index()
ุงููุงูุด_line['ุงููุงูุด'] = (ุงููุงูุด_line['ุงููุจูุนุงุช'] - ุงููุงูุด_line['cost'])/ ุงููุงูุด_line['ุงููุจูุนุงุช']
st.line_chart(ุงููุงูุด_line.rename(columns={'Date': 'ุงูุชุงุฑูุฎ'}), x='ุงูุชุงุฑูุฎ', y='ุงููุงูุด')


displaydf = filtered_df.rename(columns={'Product': 'ุงูููุชุฌ', 'Price': 'ุงูุณุนุฑ'})
col1, col2 = st.columns(2)
# Display the first few rows of the dataset
with col1:
    st.markdown("#### ุฃุณุนุงุฑ ุงูููุชุฌุงุช")
    st.dataframe(displaydf[displaydf['Date'] == from_date][['ุงูููุชุฌ', 'ุงูุณุนุฑ']].set_index('ุงูููุชุฌ').drop_duplicates())

with col2:
    st.markdown("#### ููุงูุด ุงูููุชุฌุงุช")
    st.dataframe(displaydf[displaydf['Date'] == from_date][['ุงูููุชุฌ', 'ูุงูุด ุงูููุชุฌ']].set_index('ุงูููุชุฌ').drop_duplicates())

# with col3:
#     st.dataframe(filtered_df[['Product', 'COGS']].drop_duplicates())
